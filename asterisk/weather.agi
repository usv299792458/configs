#!/usr/bin/perl -w
use strict;

use Asterisk::AGI;
my $AGI = new Asterisk::AGI;
my %input = $AGI->ReadParse();
exit if $input{type} eq 'SIP' && $input{callerid} !~ /(?:3233|2000|4949|945190|944942|921732)$/;

use Digest::MD5 qw(md5_hex);
my $sounddir = "/var/lib/asterisk/sounds/tts";
sub my_festival ($) {
  my $hash = md5_hex($_[0]);
  my $wavefile = "$sounddir/"."tts-$hash.wav";

  unless (-f $wavefile) {
    my $execf="echo '$_[0]' | text2wave -eval '(voice_msu_ru_nsh_clunits)' -F 8000 -scale 1.5 -o $wavefile";
    system($execf);
  }
  $wavefile =~ s/.wav$//;

  $AGI->exec('Playback', $wavefile);
}

use Encode ();
use LWP::Simple;
my $doc = Encode::encode('utf8',get 'http://www.yandex.ru');
$doc = $1 if $doc =~ m!<div class="b-weather">(.*?)</div></div></td>!;

my @a = $doc =~ m!<a[^>]+>([^<]+?)</a>!g;
exit unless $doc =~ /title="([^"]+)"/;
$a[0] = $1;
for (@a) {
  s/\&nbsp\;/ /g;
  s/\+/плюс /g;
  s/−/минус /g;
  s/°C/градусов/;
  s/облачно/+облачно/;
  s/дождь/д+о-ждь/;
}

my $s = $a[0] . '. ' . $a[1] . '. ' . $a[2] . '. ' . $a[3] . '. - - - ' . $a[4] . '.';

open F, '>>/tmp/zzz';
print F $s, "\n";
close F;

my_festival $s;

